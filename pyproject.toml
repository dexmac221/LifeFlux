[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "lifeflux"
version = "1.0.0"
description = "Advanced Cellular Automaton with Flux Dynamics - Conway's Life meets fluid simulation"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "LifeFlow Contributors"}
]
keywords = ["cellular-automaton", "conway", "life", "simulation", "cuda", "flow-dynamics", "visualization"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Education", 
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Life",
    "Topic :: Scientific/Engineering :: Visualization",
    "Topic :: Software Development :: Libraries :: Python Modules"
]
requires-python = ">=3.9"
dependencies = [
    "numpy>=1.20.0",
    "matplotlib>=3.5.0", 
    "imageio>=2.20.0",
    "scipy>=1.8.0"
]

[project.optional-dependencies]
cuda = ["cupy-cuda12x>=12.0.0"]
visualization-3d = ["open3d>=0.15.0"]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=3.0.0",
    "black>=22.0.0",
    "flake8>=4.0.0",
    "mypy>=0.950"
]
all = ["lifeflow[cuda,visualization-3d,dev]"]

[project.urls]
Homepage = "https://github.com/yourusername/lifeflow"
Repository = "https://github.com/yourusername/lifeflow.git"
Documentation = "https://github.com/yourusername/lifeflow/blob/main/docs/README.md"
"Bug Tracker" = "https://github.com/yourusername/lifeflow/issues"

[project.scripts]
lifeflux2dd = "lifeflux2d:main"
lifeflux3d = "lifeflux3d:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
lifeflow = "src"

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311']

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--tb=short",
    "--strict-markers",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "cuda: marks tests that require CUDA",
    "visualization: marks tests that require display/GUI"
]

[tool.coverage.run]
source = ["src"]
omit = ["tests/*", "examples/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "cupy.*",
    "cupyx.*", 
    "open3d.*",
    "imageio.*"
]
ignore_missing_imports = true
